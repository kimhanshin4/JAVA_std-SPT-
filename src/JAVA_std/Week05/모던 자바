모던 자바 알아보기 (람다, 스트림, optional)
-자바는 진화하는 언어.
-프로그래머가 해결해야 하는 문제는 계속해서 변화함 => 언어에 요구되는 기능들도 변화

자바의 대격변
ㄴ새로운 요구사항
    1. 병렬 처리
    2. 함수형 프로그래밍 : 객체 지향 프로그래밍처럼 프로그래밍의 패러다임의 한 종류

객체 지향 프로그래밍의 핵심 아이디어
- 코드의 재사용성이 높아진다
- 코드를 유지보수, 확장 하기 쉬워진다.
- 코드를 신뢰성 있게 사용하기 쉬워진다.
함수형 프로그래밍의 핵심 아이디어
-순수함수를 차용
 ㄴ순수함수 : 수학의 함수처럼, 특정 데이터에 의존않고, 관련없는 데이터 변겅x, 결과값이 오직 입력값에만 영향을 받는 함수
 -순수함수의 모음으로 바라보고 구현한다.

 핵심 개념을 통해 달성하는 효용
 a.검증이 쉽다.
 b.성능 최적화가 쉽다.
 c.동시성 문제를 해결하기 쉽다.

 자바 함수의 변화
 -함수형 프로그래밍 아이디어 1 => 함수를 객체처럼 사용하겠다.
 -함수형 프로그래밍 아이디어 2 => 람다 : 익명함수
 -일급객체


 스트림 : map, filter
  - 컬렉션의 반복을 처리하는 멋진 일종의 기능
  - 멀티 스레드 관련 코드들도 알아서 병렬로 추가해주는 기능